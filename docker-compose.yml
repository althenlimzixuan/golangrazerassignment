version: '3.4'

services:
  razerassignment:
    image: razerassignment
    build: "."
    # build: 
    #   context: .
    #   dockerfile: ./Dockerfile
    ports:
      - "5000"
      # - 5000:5000
    # restart: always
    networks: 
      - "razerassignment.network"
      # Starts up 5 replicas of the same image
    deploy:
      replicas: 5
    restart: always
    depends_on:
      - mysql
  #  nginx container
  nginx:
    # specifies the latest nginx image
    image: nginx:latest
    # Connects the conf file of the container to the conf file in our folder
    volumes:
        - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    # It will start up the nginx only when all api containers have started
    depends_on: 
      - razerassignment
    # Connects the port 80 of the nginx container to localhost:80 or localhost
    ports: 
      - "80:80"
    restart: always
    networks: 
      - "razerassignment.network"
  mysql:
    image: mysql:latest
    command: 
      - --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: "!Razer1234."
      MYSQL_DATABASE: "test"
      MYSQL_ROOT_HOST: "%"
    ports: 
      - "3306:3306"
    networks: 
      - "razerassignment.network"

networks: 
  razerassignment.network:

# version: '3.4'

# services:
#   razerassignment:
#     image: razerassignment
#     build: 
#       context: .
#       dockerfile: ./Dockerfile
#     ports:
#       - 80:80
#     networks: 
#       - "razerassignment.network"
#       # Starts up 5 replicas of the same image
# networks: 
#   razerassignment.network: